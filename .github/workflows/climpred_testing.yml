name: CI  # based on https://github.com/pydata/xarray/blob/master/.github/workflows/ci.yaml

on:
  pull_request:
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.2
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  minimum-test:  # Runs testing suite with minimal dependencies
    name: Test minimum dependencies, python 3.x
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
        run:
          shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge
          mamba-version: '*'
          activate-environment: climpred-minimum-tests
          python-version: 3.8
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/minimum-tests.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Cache datasets  # pytest-xdist fails otherwise
        run: python -c "import climpred; climpred.tutorial._cache_all()"
      - name: Run tests
        run: pytest -n 4 --durations=20

  maximum-test:  # Runs testing suite with all optional dependencies
    name: Test optional dependencies, python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
        run:
          shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge
          mamba-version: '*'
          activate-environment: climpred-maximum-tests
          python-version: ${{ matrix.python-version }}
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/maximum-tests.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Cache datasets  # pytest-xdist fails otherwise
        run: python -c "import climpred; climpred.tutorial._cache_all()"
      - name: Run tests
        run: pytest -n 4 --durations=20 --cov=climpred --cov-report=xml
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false

  doctest:  # tests all docstrings
    name: Doctests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: "*"
          activate-environment: climpred-maximum-tests
          auto-update-conda: false
          python-version: 3.8
      - name: Install conda dependencies
        run: |
          mamba env update -f ci/requirements/maximum-tests.yml
      - name: Install climpred
        run: |
          python -m pip install -e .[complete]
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Run doctests
        run: |
          python -m pytest --doctest-modules climpred --ignore climpred/tests

  notebooks:  # Checks that pre-compiled notebooks in docs still work.
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge
          mamba-version: '*'
          activate-environment: climpred-docs
          python-version: 3.8
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/docs.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Test notebooks in docs
        run: |
          pushd docs
          nbstripout source/*.ipynb source/examples/decadal/*.ipynb source/examples/monseas/*.ipynb examples/subseasonal/*ly-subx-example.html
          make -j4 html
          popd
