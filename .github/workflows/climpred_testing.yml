name: climpred testing

on: pull_request

jobs:
  test:  # Runs testing suite on various python versions.
    name: Test climpred, python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge
          mamba-version: '*'
          activate-environment: climpred-minimum-tests
          python-version: ${{ matrix.python-version }}
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/minimum-tests.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Cache datasets  # pytest-xdist fails otherwise
        run: python -c "import climpred; climpred.tutorial._cache_all()"
      - name: Run tests
        run: pytest -n 4 --durations=20 --cov=climpred --cov-report=xml
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false

  doctest:  # tests all docstrings
    name: Doctests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: climpred-minimum-tests
          auto-update-conda: false
          python-version: "3.8"

      - name: Install conda dependencies
        run: |
          mamba env update -f ci/requirements/minimum-tests.yml
      - name: Install climpred
        run: |
          python -m pip install --no-deps -e .
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Run doctests
        run: |
          python -m pytest --doctest-modules climpred --ignore climpred/tests

  docs_notebooks:  # Checks that pre-compiled notebooks in docs still work.
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash -l {0}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge
          mamba-version: '*'
          activate-environment: climpred-docs-notebooks
          python-version: 3.8
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/docs_notebooks.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Test notebooks in docs
        run: |
          pushd docs
          nbstripout source/*.ipynb source/examples/decadal/*.ipynb source/examples/subseasonal/*.ipynb
          make -j4 html
          popd
